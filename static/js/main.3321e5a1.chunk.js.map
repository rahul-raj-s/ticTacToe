{"version":3,"sources":["components/boxContainer/boxContainer.module.css","loader/loader.js","components/login/login.js","components/login/index.js","gameChecker/gameChecker.js","gameChecker/index.js","ComputerPlayer/ComputerPlayer.js","ComputerPlayer/index.js","components/box/box.js","components/box/index.js","components/boxContainer/boxContainer.js","components/boxContainer/index.js","components/ModeSelector/ModeSelector.js","components/ModeSelector/index.js","App.js","serviceWorker.js","index.js","components/ModeSelector/ModeSelector.module.css","components/login/login.module.css","components/box/box.module.css"],"names":["module","exports","Login","mode","props","useState","player1","setPlayer1","player2","setPlayer2","className","style","loginContainer","input","value","onChange","event","target","handlePlayer1","handlePlayer2","onClick","onLogin","startButton","boxes","intialStatus","i","push","term","computersMove","opponentsMove","possibleSolution","gameChecker","status","currentArray","corners","_randomMove","suggest","Math","floor","random","_detector","arr","length","includes","j","_nextPlayerWinDetector","playerMoves","tempSuggestion","computerPlayer","ComputerPlayer","steps","level","nextMove","console","log","cornerIndex","memo","Box","additionalClass","o","x","activeClass","active","final","box","join","gameLock","handleClick","id","BoxContainer","players","setStatus","result","gameCount","setGameCount","useEffect","setTimeout","setClick","response","prevGameCount","newMove","prevStatus","restartGame","switchPlayer","gameContainer","gameDetails","userInfo","reload","Reload","boxContainer","map","item","key","footer","Poster","icon","poster","modeName","LevelSelector","modeChanger","React","ModeSelector","setLevel","modeContainer","Desktop","height","width","color","multiUserIcon","User","App","setPlayers","gameSpec","setGameSpec","l1","newPlayer","handleLogin","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3321e5a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameContainer\":\"boxContainer_gameContainer__1OUaz\",\"boxContainer\":\"boxContainer_boxContainer__YnxzJ\",\"userInfo\":\"boxContainer_userInfo__1KsfP\",\"gameDetails\":\"boxContainer_gameDetails__2Pu_0\",\"reload\":\"boxContainer_reload__1gFvL\",\"footer\":\"boxContainer_footer__1vETF\"};","const boxes = [];\nlet intialStatus = {};\nfor (let i = 1; i < 10; i++) {\n  boxes.push(i);\n  intialStatus = { ...intialStatus, [i]: \"\" };\n}\nintialStatus = {\n  ...intialStatus,\n  term: \"O\",\n  computersMove: [],\n  opponentsMove: []\n};\n\nexport { boxes, intialStatus };\n","import React, { useState } from \"react\";\nimport style from \"./login.module.css\";\n\nfunction Login({ mode, ...props }) {\n  const [player1, setPlayer1] = useState(\"\");\n  const [player2, setPlayer2] = useState(mode === \"1\" ? \"Computer\" : \"\");\n\n  const handlePlayer1 = event => {\n    setPlayer1(event.target.value);\n  };\n\n  const handlePlayer2 = event => {\n    if (mode !== \"1\") {\n      setPlayer2(event.target.value);\n    }\n  };\n\n  return (\n    <div className={style.loginContainer}>\n      <label>First Player</label>\n      <input\n        className={style.input}\n        value={player1}\n        onChange={event => handlePlayer1(event)}\n      />\n      <label>Second Player</label>\n      {mode === \"1\" ? (\n        <div className={style.input}>{player2}</div>\n      ) : (\n        <input\n          className={style.input}\n          value={player2}\n          onChange={event => handlePlayer2(event)}\n        />\n      )}\n      <button\n        onClick={() =>\n          props.onLogin({ player1: player1, player2: player2, mode: { mode } })\n        }\n        className={style.startButton}\n      >\n        START\n      </button>\n    </div>\n  );\n}\n\nexport default Login;\n","import Login from \"./login\";\n\nexport default Login;\n","const possibleSolution = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n  [1, 5, 9],\n  [3, 5, 7],\n  [1, 4, 7],\n  [2, 5, 8],\n  [3, 6, 9]\n];\nconst gameChecker = status => {\n  for (let i = 0; i < 8; i++) {\n    let currentArray = possibleSolution[i];\n    if (\n      status[currentArray[0]] !== \"\" &&\n      status[currentArray[0]] === status[currentArray[1]] &&\n      status[currentArray[0]] === status[currentArray[2]]\n    ) {\n      return currentArray;\n    }\n  }\n  return false;\n};\n\nexport default gameChecker;\n","import gameChecker from \"./gameChecker\";\n\nexport default gameChecker;\n","const corners = [1, 3, 7, 9];\nconst possibleSolution = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n  [1, 5, 9],\n  [3, 5, 7],\n  [1, 4, 7],\n  [2, 5, 8],\n  [3, 6, 9]\n];\n\nfunction _randomMove(status) {\n  let suggest;\n  do {\n    suggest = Math.floor(Math.random() * 10); // Just for saftey it won't needed\n  } while (status[suggest] !== \"\");\n  return suggest;\n}\n// Detects next place to move for win\nfunction _detector(arr, status) {\n  for (let i = 0; i < possibleSolution.length; i++) {\n    if (\n      possibleSolution[i].includes(arr[0]) &&\n      possibleSolution[i].includes(arr[1])\n    ) {\n      for (let j = 0; j < 3; j++) {\n        if (status[possibleSolution[i][j]] === \"\") {\n          return possibleSolution[i][j];\n        }\n      }\n    }\n  }\n  return false;\n}\n\n// Generates all possible ways of winning opponent\nfunction _nextPlayerWinDetector(status, playerMoves) {\n  for (let i = 0; i < playerMoves.length - 1; i++) {\n    for (let j = i + 1; j < playerMoves.length; j++) {\n      const tempSuggestion = _detector(\n        [playerMoves[i], playerMoves[j]],\n        status\n      );\n      if (tempSuggestion) {\n        return tempSuggestion;\n      }\n    }\n  }\n  return false;\n}\n\nfunction computerPlayer(status, steps, level) {\n  console.log(\"level\", level);\n  console.log(\"count\", steps);\n  let nextMove;\n\n  if (steps === 1 && level === \"high\") {\n    if (status[5] === \"\") {\n      nextMove = 5;\n    } else {\n      const cornerIndex = Math.floor((Math.random() * 10) / 3);\n      nextMove = corners[cornerIndex];\n    }\n  } else if (steps === 3 && level === \"high\") {\n    let suggest = _nextPlayerWinDetector(status, status.opponentsMove);\n    if (suggest) {\n      nextMove = suggest;\n    } else {\n      nextMove = _randomMove(status);\n    }\n  } else {\n    let suggest = _nextPlayerWinDetector(status, status.computersMove); // check computer's winning chances\n    if (!suggest) {\n      suggest = _nextPlayerWinDetector(status, status.opponentsMove);\n    }\n    if (!suggest) {\n      suggest = _randomMove(status);\n    }\n    nextMove = suggest;\n  }\n  status.computersMove.push(nextMove);\n  return nextMove;\n}\n\nexport default computerPlayer;\n","import ComputerPlayer from \"./ComputerPlayer\";\n\nexport default ComputerPlayer;\n","import React, { memo } from \"react\";\nimport style from \"./box.module.css\";\n\nfunction Box(props) {\n  const additionalClass = props.term === \"O\" ? style.o : style.x;\n  const activeClass = props.active ? style.final : \"\";\n  return (\n    <div\n      className={[style.box, additionalClass, activeClass].join(\" \")}\n      onClick={() => {\n        props.term.length === 0 &&\n          !props.gameLock &&\n          props.handleClick(props.id);\n      }}\n    >\n      {props.term}\n    </div>\n  );\n}\n\nexport default memo(Box);\n","import Box from \"./box\";\n\nexport default Box;\n","import React, { memo, useState, useEffect } from \"react\";\nimport { boxes, intialStatus } from \"../../loader\";\nimport gameChecker from \"../../gameChecker\";\nimport computerPlayer from \"../../ComputerPlayer\";\nimport { Reload } from \"react-bytesize-icons\";\nimport Box from \"../box\";\nimport style from \"./boxContainer.module.css\";\n\nfunction BoxContainer({ players, mode, level, ...props }) {\n  const [status, setStatus] = useState(intialStatus);\n  const [gameCount, setGameCount] = useState({ result: [], steps: -1 });\n\n  let player1 = players.player1 || \"Player1\";\n  let player2 = players.player2 || \"Player2\";\n\n  useEffect(() => {\n    if (\n      mode === \"1\" &&\n      gameCount.result.length === 0 &&\n      gameCount.steps % 2 === 1 &&\n      gameCount.steps < 9\n    ) {\n      let nextMove = computerPlayer(status, gameCount.steps, level);\n      setTimeout(() => setClick(nextMove), 1000);\n    }\n  }, [gameCount]);\n  useEffect(() => {\n    let response = gameChecker(status);\n    if (response) {\n      setGameCount(prevGameCount => ({ ...prevGameCount, result: response }));\n    } else {\n      setGameCount(prevGameCount => ({\n        ...prevGameCount,\n        steps: prevGameCount.steps + 1\n      }));\n    }\n  }, [status]);\n  useEffect(() => {}, []);\n\n  const setClick = id => {\n    let newMove = [...status.opponentsMove];\n    if (mode === \"1\" && gameCount.steps % 2 === 0) {\n      newMove = [...status.opponentsMove];\n      newMove.push(id);\n    }\n    setStatus(prevStatus => ({\n      ...prevStatus,\n      [id]: prevStatus.term,\n      term: prevStatus.term === \"O\" ? \"X\" : \"O\",\n      opponentsMove: [...newMove]\n    }));\n  };\n\n  const restartGame = () => {\n    //Switch the term of player\n    let switchPlayer = player1;\n    player1 = player2;\n    player2 = switchPlayer;\n    setStatus({ ...intialStatus, computersMove: [], opponentsMove: [] });\n    setGameCount({ result: [], steps: -1 });\n  };\n\n  return (\n    <div className={style.gameContainer}>\n      {gameCount.result.length > 0 ? (\n        <div className={style.gameDetails}>\n          <span className={style.userInfo}>\n            {`${status.term === \"O\" ? player2 : player1} win`}\n          </span>\n          <div className={style.reload} onClick={restartGame}>\n            <Reload />\n          </div>\n        </div>\n      ) : (\n        <div className={style.gameDetails}>\n          <span className={style.userInfo}>\n            {gameCount.steps >= 9\n              ? \"Game Draw\"\n              : `${status.term === \"O\" ? player1 : player2}'s turn...`}\n          </span>\n\n          <div className={style.reload} onClick={restartGame}>\n            <Reload />\n          </div>\n        </div>\n      )}\n      <div className={style.boxContainer}>\n        {boxes.map(item => (\n          <Box\n            id={item}\n            key={item}\n            handleClick={id => setClick(id)}\n            term={status[item]}\n            gameLock={\n              gameCount.result.length > 0 ||\n              (mode === \"1\" && gameCount.steps % 2 === 1)\n            }\n            active={gameCount.result.includes(item)}\n          />\n        ))}\n      </div>\n      <footer className={style.footer}>Version 2.0.2</footer>\n    </div>\n  );\n}\n\nexport default memo(BoxContainer);\n","import BoxContainer from \"./boxContainer\";\n\nexport default BoxContainer;\n","import React, { useState } from \"react\";\nimport { Desktop, User } from \"react-bytesize-icons\";\nimport style from \"./ModeSelector.module.css\";\n\nfunction Poster({ mode, icon, onClick }) {\n  return (\n    <div className={style.poster} onClick={onClick}>\n      {icon}\n      <div className={style.modeName}>{mode}</div>\n    </div>\n  );\n}\nfunction LevelSelector({ modeChanger }) {\n  return (\n    <div className={style.poster}>\n      <span className={style.level} onClick={() => modeChanger(\"1\", \"low\")}>\n        Easy\n      </span>\n      <span className={style.level} onClick={() => modeChanger(\"1\", \"high\")}>\n        Hard\n      </span>\n    </div>\n  );\n}\nfunction ModeSelector({ modeChanger }) {\n  const [level, setLevel] = useState(false);\n  return (\n    <div className={style.modeContainer}>\n      {level ? (\n        <LevelSelector modeChanger={modeChanger} />\n      ) : (\n        <>\n          <Poster\n            mode=\"Play with Computer\"\n            icon={<Desktop height=\"200px\" width=\"200px\" color=\"blue\" />}\n            onClick={() => setLevel(true)}\n          />\n          <Poster\n            mode=\"Happy Together\"\n            icon={\n              <div className={style.multiUserIcon}>\n                <User height=\"150px\" width=\"100px\" color=\"blue\" />\n                <User height=\"150px\" width=\"100px\" color=\"blue\" />\n              </div>\n            }\n            onClick={() => modeChanger(\"2\", \"low\")}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(ModeSelector);\n","import ModeSelector from \"./ModeSelector\";\n\nexport default ModeSelector;\n","import React, { useState } from \"react\";\nimport Login from \"./components/login\";\nimport BoxContainer from \"./components/boxContainer\";\nimport ModeSelector from \"./components/ModeSelector\";\n\nfunction App() {\n  const [players, setPlayers] = useState(null);\n  const [gameSpec, setGameSpec] = useState({ mode: false, level: false });\n\n  const handleLogin = newPlayer => {\n    setPlayers(newPlayer);\n  };\n\n  return (\n    <div className=\"App\">\n      {!gameSpec.mode && (\n        <ModeSelector\n          modeChanger={(id, l1) => setGameSpec({ mode: id, level: l1 })}\n        />\n      )}\n      {players ? (\n        <BoxContainer\n          players={players}\n          mode={gameSpec.mode}\n          level={gameSpec.level}\n        />\n      ) : (\n        gameSpec.mode && (\n          <Login\n            onLogin={newPlayer => handleLogin(newPlayer)}\n            mode={gameSpec.mode}\n          />\n        )\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"poster\":\"ModeSelector_poster__2WJ_A\",\"modeContainer\":\"ModeSelector_modeContainer__jDAL9\",\"modeName\":\"ModeSelector_modeName__32Kiu\",\"multiUserIcon\":\"ModeSelector_multiUserIcon__2YG3b\",\"level\":\"ModeSelector_level__OcqpK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"login_loginContainer__1H0gr\",\"input\":\"login_input__S5ZYI\",\"startButton\":\"login_startButton__39u2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"box_box__2bgV5\",\"x\":\"box_x__3tvwc\",\"o\":\"box_o__o30fU\",\"final\":\"box_final__3Ajcr\"};"],"sourceRoot":""}