{"version":3,"sources":["components/boxContainer/boxContainer.module.css","loader/loader.js","components/login/login.js","components/login/index.js","gameChecker/gameChecker.js","gameChecker/index.js","ComputerPlayer/ComputerPlayer.js","ComputerPlayer/index.js","components/box/box.js","components/box/index.js","components/boxContainer/boxContainer.js","components/boxContainer/index.js","components/ModeSelector/ModeSelector.js","components/ModeSelector/index.js","App.js","serviceWorker.js","index.js","components/login/login.module.css","components/box/box.module.css","components/ModeSelector/ModeSelector.module.css"],"names":["module","exports","Login","mode","props","useState","player1","setPlayer1","player2","setPlayer2","className","style","loginContainer","input","value","onChange","event","target","handlePlayer1","handlePlayer2","onClick","onLogin","startButton","boxes","intialStatus","i","push","term","steps","computersMove","opponentsMove","possibleSolution","gameChecker","status","currentArray","corners","_detector","arr","length","includes","j","_nextPlayerWinDetector","playerMoves","tempSuggestion","computerPlayer","ComputerPlayer","nextMove","cornerIndex","Math","floor","random","suggest","memo","Box","additionalClass","o","x","activeClass","active","final","box","join","gameLock","handleClick","id","BoxContainer","players","setStatus","result","setResult","useEffect","response","setClick","newMove","prevStatus","restartGame","switchPlayer","gameContainer","gameDetails","userInfo","reload","Reload","boxContainer","map","item","key","footer","Poster","icon","poster","modeName","React","ModeSelector","modeChanger","modeContainer","Desktop","height","width","color","multiUserIcon","User","App","setPlayers","setMode","newPlayer","handleLogin","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.079ef7b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameContainer\":\"boxContainer_gameContainer__1OUaz\",\"boxContainer\":\"boxContainer_boxContainer__YnxzJ\",\"userInfo\":\"boxContainer_userInfo__1KsfP\",\"gameDetails\":\"boxContainer_gameDetails__2Pu_0\",\"reload\":\"boxContainer_reload__1gFvL\",\"footer\":\"boxContainer_footer__1vETF\"};","const boxes = [];\nlet intialStatus = {};\nfor (let i = 1; i < 10; i++) {\n  boxes.push(i);\n  intialStatus = { ...intialStatus, [i]: \"\" };\n}\nintialStatus = {\n  ...intialStatus,\n  term: \"O\",\n  steps: 0,\n  computersMove: [],\n  opponentsMove: []\n};\n\nexport { boxes, intialStatus };\n","import React, { useState } from \"react\";\nimport style from \"./login.module.css\";\n\nfunction Login({ mode, ...props }) {\n  const [player1, setPlayer1] = useState(\"\");\n  const [player2, setPlayer2] = useState(mode === \"1\" ? \"Computer\" : \"\");\n\n  const handlePlayer1 = event => {\n    setPlayer1(event.target.value);\n  };\n\n  const handlePlayer2 = event => {\n    if (mode !== \"1\") {\n      setPlayer2(event.target.value);\n    }\n  };\n\n  return (\n    <div className={style.loginContainer}>\n      <label>First Player</label>\n      <input\n        className={style.input}\n        value={player1}\n        onChange={event => handlePlayer1(event)}\n      />\n      <label>Second Player</label>\n      {mode === \"1\" ? (\n        <div className={style.input}>{player2}</div>\n      ) : (\n        <input\n          className={style.input}\n          value={player2}\n          onChange={event => handlePlayer2(event)}\n        />\n      )}\n      <button\n        onClick={() =>\n          props.onLogin({ player1: player1, player2: player2, mode: { mode } })\n        }\n        className={style.startButton}\n      >\n        START\n      </button>\n    </div>\n  );\n}\n\nexport default Login;\n","import Login from \"./login\";\n\nexport default Login;\n","const possibleSolution = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n  [1, 5, 9],\n  [3, 5, 7],\n  [1, 4, 7],\n  [2, 5, 8],\n  [3, 6, 9]\n];\nconst gameChecker = status => {\n  for (let i = 0; i < 8; i++) {\n    let currentArray = possibleSolution[i];\n    if (\n      status[currentArray[0]] !== \"\" &&\n      status[currentArray[0]] === status[currentArray[1]] &&\n      status[currentArray[0]] === status[currentArray[2]]\n    ) {\n      return currentArray;\n    }\n  }\n  return false;\n};\n\nexport default gameChecker;\n","import gameChecker from \"./gameChecker\";\n\nexport default gameChecker;\n","const corners = [1, 3, 7, 9];\nconst possibleSolution = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n  [1, 5, 9],\n  [3, 5, 7],\n  [1, 4, 7],\n  [2, 5, 8],\n  [3, 6, 9]\n];\n\n// Detects next place to move for win\nfunction _detector(arr, status) {\n  for (let i = 0; i < possibleSolution.length; i++) {\n    if (\n      possibleSolution[i].includes(arr[0]) &&\n      possibleSolution[i].includes(arr[1])\n    ) {\n      for (let j = 0; j < 3; j++) {\n        if (status[possibleSolution[i][j]] === \"\") {\n          return possibleSolution[i][j];\n        }\n      }\n    }\n  }\n  return false;\n}\n\n// Generates all possible ways of winning opponent\nfunction _nextPlayerWinDetector(status, playerMoves) {\n  for (let i = 0; i < playerMoves.length - 1; i++) {\n    for (let j = i + 1; j < playerMoves.length; j++) {\n      const tempSuggestion = _detector(\n        [playerMoves[i], playerMoves[j]],\n        status\n      );\n      if (tempSuggestion) {\n        return tempSuggestion;\n      }\n    }\n  }\n  return false;\n}\n\nfunction computerPlayer(status) {\n  let nextMove;\n  if (status.steps === 1) {\n    if (status[5] === \"\") {\n      nextMove = 5;\n    } else {\n      const cornerIndex = Math.floor((Math.random() * 10) / 3);\n      nextMove = corners[cornerIndex];\n    }\n  } else if (status.steps === 3) {\n    let suggest = _nextPlayerWinDetector(status, status.opponentsMove);\n    if (suggest) {\n      nextMove = suggest;\n    } else {\n      do {\n        suggest = Math.floor(Math.random() * 10); // Just for saftey it won't needed\n      } while (status[suggest] !== \"\");\n      nextMove = suggest;\n    }\n  } else {\n    let suggest = _nextPlayerWinDetector(status, status.computersMove); // check computer's winning chances\n    if (!suggest) {\n      suggest = _nextPlayerWinDetector(status, status.opponentsMove);\n    }\n    nextMove = suggest;\n  }\n  status.computersMove.push(nextMove);\n  return nextMove;\n}\n\nexport default computerPlayer;\n","import ComputerPlayer from \"./ComputerPlayer\";\n\nexport default ComputerPlayer;\n","import React, { memo } from \"react\";\nimport style from \"./box.module.css\";\n\nfunction Box(props) {\n  const additionalClass = props.term === \"O\" ? style.o : style.x;\n  const activeClass = props.active ? style.final : \"\";\n  return (\n    <div\n      className={[style.box, additionalClass, activeClass].join(\" \")}\n      onClick={() =>\n        props.term.length === 0 &&\n        !props.gameLock &&\n        props.handleClick(props.id)\n      }\n    >\n      {props.term}\n    </div>\n  );\n}\n\nexport default memo(Box);\n","import Box from \"./box\";\n\nexport default Box;\n","import React, { memo, useState, useEffect } from \"react\";\nimport { boxes, intialStatus } from \"../../loader\";\nimport gameChecker from \"../../gameChecker\";\nimport computerPlayer from \"../../ComputerPlayer\";\nimport { Reload } from \"react-bytesize-icons\";\nimport Box from \"../box\";\nimport style from \"./boxContainer.module.css\";\n\nfunction BoxContainer({ players, mode, ...props }) {\n  const [status, setStatus] = useState(intialStatus);\n  const [result, setResult] = useState([]);\n  let player1 = players.player1 || \"Player1\";\n  let player2 = players.player2 || \"Player2\";\n  useEffect(() => {\n    let response = gameChecker(status);\n    if (response) {\n      setResult(response);\n    }\n  }, [status]);\n\n  const setClick = id => {\n    let newMove = [...status.opponentsMove];\n    if (mode === \"1\" && status.steps % 2 === 0) {\n      newMove = [...status.opponentsMove];\n      newMove.push(id);\n    }\n    setStatus(prevStatus => ({\n      ...prevStatus,\n      [id]: prevStatus.term,\n      term: prevStatus.term === \"O\" ? \"X\" : \"O\",\n      steps: prevStatus.steps + 1,\n      opponentsMove: [...newMove]\n    }));\n  };\n\n  const restartGame = () => {\n    //Switch the term of player\n    let switchPlayer = player1;\n    player1 = player2;\n    player2 = switchPlayer;\n    setStatus({ ...intialStatus, computersMove: [], opponentsMove: [] });\n    setResult([]);\n  };\n\n  if (\n    mode === \"1\" &&\n    result.length === 0 &&\n    status.steps % 2 === 1 &&\n    status.steps < 9\n  ) {\n    let nextMove = computerPlayer(status);\n    setClick(nextMove);\n  }\n\n  return (\n    <div className={style.gameContainer}>\n      {result.length > 0 ? (\n        <div className={style.gameDetails}>\n          <span className={style.userInfo}>\n            {`${status.term === \"O\" ? player2 : player1} win`}\n          </span>\n          <div className={style.reload} onClick={restartGame}>\n            <Reload />\n          </div>\n        </div>\n      ) : (\n        <div className={style.gameDetails}>\n          <span className={style.userInfo}>\n            {status.steps >= 9\n              ? \"Game Draw\"\n              : `${status.term === \"O\" ? player1 : player2}'s turn...`}\n          </span>\n\n          <div className={style.reload} onClick={restartGame}>\n            <Reload />\n          </div>\n        </div>\n      )}\n      <div className={style.boxContainer}>\n        {boxes.map(item => (\n          <Box\n            id={item}\n            key={item}\n            handleClick={id => setClick(id)}\n            gameLock={\n              result.length > 0 || (mode === \"1\" && status.steps % 2 === 1)\n            }\n            term={status[item]}\n            active={result.includes(item)}\n          />\n        ))}\n      </div>\n      <footer className={style.footer}>Version 2.0.2</footer>\n    </div>\n  );\n}\n\nexport default memo(BoxContainer);\n","import BoxContainer from \"./boxContainer\";\n\nexport default BoxContainer;\n","import React from \"react\";\nimport { Desktop, User } from \"react-bytesize-icons\";\nimport style from \"./ModeSelector.module.css\";\n\nfunction Poster({ mode, icon, onClick }) {\n  return (\n    <div className={style.poster} onClick={onClick}>\n      {icon}\n      <div className={style.modeName}>{mode}</div>\n    </div>\n  );\n}\nfunction ModeSelector({ modeChanger }) {\n  return (\n    <div className={style.modeContainer}>\n      <Poster\n        mode=\"Play with Computer\"\n        icon={<Desktop height=\"200px\" width=\"200px\" color=\"blue\" />}\n        onClick={() => modeChanger(\"1\")}\n      />\n      <Poster\n        mode=\"Happy Together\"\n        icon={\n          <div className={style.multiUserIcon}>\n            <User height=\"150px\" width=\"100px\" color=\"blue\" />\n            <User height=\"150px\" width=\"100px\" color=\"blue\" />\n          </div>\n        }\n        onClick={() => modeChanger(\"2\")}\n      />\n    </div>\n  );\n}\n\nexport default React.memo(ModeSelector);\n","import ModeSelector from \"./ModeSelector\";\n\nexport default ModeSelector;\n","import React, { useState } from \"react\";\nimport Login from \"./components/login\";\nimport BoxContainer from \"./components/boxContainer\";\nimport ModeSelector from \"./components/ModeSelector\";\n\nfunction App() {\n  const [players, setPlayers] = useState(null);\n  const [mode, setMode] = useState(null);\n\n  const handleLogin = newPlayer => {\n    setPlayers(newPlayer);\n  };\n\n  return (\n    <div className=\"App\">\n      {!mode && <ModeSelector modeChanger={id => setMode(id)} />}\n      {players ? (\n        <BoxContainer players={players} mode={mode} />\n      ) : (\n        mode && (\n          <Login onLogin={newPlayer => handleLogin(newPlayer)} mode={mode} />\n        )\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"login_loginContainer__1H0gr\",\"input\":\"login_input__S5ZYI\",\"startButton\":\"login_startButton__39u2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"box_box__2bgV5\",\"x\":\"box_x__3tvwc\",\"o\":\"box_o__o30fU\",\"final\":\"box_final__3Ajcr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"poster\":\"ModeSelector_poster__2WJ_A\",\"modeContainer\":\"ModeSelector_modeContainer__jDAL9\",\"modeName\":\"ModeSelector_modeName__32Kiu\",\"multiUserIcon\":\"ModeSelector_multiUserIcon__2YG3b\"};"],"sourceRoot":""}