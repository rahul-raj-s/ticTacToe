{"version":3,"sources":["loader/loader.js","components/login/login.js","components/login/index.js","gameChecker/gameChecker.js","gameChecker/index.js","components/box/box.js","components/box/index.js","components/boxContainer/boxContainer.js","components/boxContainer/index.js","App.js","serviceWorker.js","index.js","components/boxContainer/boxContainer.module.css","components/box/box.module.css","components/login/login.module.css"],"names":["Login","props","useState","player1","setPlayer1","player2","setPlayer2","className","style","loginContainer","input","value","onChange","event","target","handlePlayer1","handlePlayer2","Button","size","onClick","onLogin","boxes","intialStatus","i","push","term","steps","possibleSolution","gameChecker","status","currentArray","memo","Box","additionalClass","o","x","activeClass","active","final","box","join","length","gameLock","handleClick","id","BoxContainer","players","setStatus","result","setResult","useEffect","response","restartGame","switchPlayer","gameDetails","userInfo","reload","Reload","boxContainer","map","item","key","prevStatus","setClick","includes","App","setPlayers","newPlayer","handleLogin","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"wOAEA,ICsCeA,ICtCAA,EDEf,SAAeC,GAAQ,IAAD,EACUC,mBAAS,IADnB,mBACbC,EADa,KACJC,EADI,OAEUF,mBAAS,IAFnB,mBAEbG,EAFa,KAEJC,EAFI,KAYpB,OACE,yBAAKC,UAAWC,IAAMC,gBACpB,oDACA,2BACEF,UAAWC,IAAME,MACjBC,MAAOR,EACPS,SAAU,SAAAC,GAAK,OAdC,SAAAA,GACpBT,EAAWS,EAAMC,OAAOH,OAaDI,CAAcF,MAEnC,qDACA,2BACEN,UAAWC,IAAME,MACjBC,MAAON,EACPO,SAAU,SAAAC,GAAK,OAhBC,SAAAA,GACpBP,EAAWO,EAAMC,OAAOH,OAeDK,CAAcH,MAEnC,kBAACI,EAAA,EAAD,CACEC,KAAK,KACLC,QAAS,kBAAMlB,EAAMmB,QAAQ,CAAEjB,QAASA,EAASE,QAASA,MAF5D,W,sBD9BAgB,EAAQ,GACVC,EAAe,GACVC,EAAI,EAAGA,EAAI,GAAIA,IACtBF,EAAMG,KAAKD,GACXD,EAAY,eAAQA,EAAR,eAAuBC,EAAI,KAEzCD,EAAY,eAAQA,EAAR,CAAsBG,KAAM,IAAKC,MAAO,IGNpD,IAAMC,EAAmB,CACvB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,ICNMC,EDQK,SAAAC,GAClB,IAAK,IAAIN,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIO,EAAeH,EAAiBJ,GACpC,GAC8B,KAA5BM,EAAOC,EAAa,KACpBD,EAAOC,EAAa,MAAQD,EAAOC,EAAa,KAChDD,EAAOC,EAAa,MAAQD,EAAOC,EAAa,IAEhD,OAAOA,EAGX,OAAO,G,wBEDMC,IClBAC,EDkBAD,gBAjBf,SAAa9B,GACX,IAAMgC,EAAiC,MAAfhC,EAAMwB,KAAejB,IAAM0B,EAAI1B,IAAM2B,EACvDC,EAAcnC,EAAMoC,OAAS7B,IAAM8B,MAAQ,GACjD,OACE,yBACE/B,UAAW,CAACC,IAAM+B,IAAKN,EAAiBG,GAAaI,KAAK,KAC1DrB,QAAS,kBACe,IAAtBlB,EAAMwB,KAAKgB,SACVxC,EAAMyC,UACPzC,EAAM0C,YAAY1C,EAAM2C,MAGzB3C,EAAMwB,S,gBE+DEM,IC5EAc,ED4EAd,gBAvEf,YAA8C,IAAtBe,EAAqB,EAArBA,QAAqB,8BACf5C,mBAASoB,IADM,mBACpCO,EADoC,KAC5BkB,EAD4B,OAEf7C,mBAAS,IAFM,mBAEpC8C,EAFoC,KAE5BC,EAF4B,KAGvC9C,EAAU2C,EAAQ3C,SAAW,UAC7BE,EAAUyC,EAAQzC,SAAW,UACjC6C,qBAAU,WACR,IAAIC,EAAWvB,EAAYC,GACvBsB,GACFF,EAAUE,KAEX,CAACtB,IAEJ,IASMuB,EAAc,WAElB,IAAIC,EAAelD,EACnBA,EAAUE,EACVA,EAAUgD,EACVN,EAAUzB,GACV2B,EAAU,KAGZ,OACE,oCACGD,EAAOP,OAAS,EACf,yBAAKlC,UAAWC,IAAM8C,aACpB,0BAAM/C,UAAWC,IAAM+C,UACJ,MAAhB1B,EAAOJ,KAAepB,EAAUF,EAChC,YAEH,yBAAKI,UAAWC,IAAMgD,OAAQrC,QAASiC,GACrC,kBAACK,EAAA,EAAD,QAIJ,yBAAKlD,UAAWC,IAAM8C,aACpB,0BAAM/C,UAAWC,IAAM+C,UACpB1B,EAAOH,OAAS,EACb,YADH,UAEsB,MAAhBG,EAAOJ,KAAetB,EAAUE,EAFtC,kBAKH,yBAAKE,UAAWC,IAAMgD,OAAQrC,QAASiC,GACrC,kBAACK,EAAA,EAAD,QAIN,yBAAKlD,UAAWC,IAAMkD,cACnBrC,EAAMsC,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CACEhB,GAAIgB,EACJC,IAAKD,EACLjB,YAAa,SAAAC,GAAE,OAhDR,SAAAA,GACfG,GAAU,SAAAe,GAAU,4BACfA,GADe,mBAEjBlB,EAAKkB,EAAWrC,MAFC,qBAGQ,MAApBqC,EAAWrC,KAAe,IAAM,KAHpB,sBAIXqC,EAAWpC,MAAQ,GAJR,OA+COqC,CAASnB,IAC5BF,SAAUM,EAAOP,OAAS,EAC1BhB,KAAMI,EAAO+B,GACbvB,OAAQW,EAAOgB,SAASJ,aEhDrBK,MAlBf,WAAgB,IAAD,EACiB/D,mBAAS,MAD1B,mBACN4C,EADM,KACGoB,EADH,KAOb,OACE,yBAAK3D,UAAU,OACZuC,EACC,kBAAC,EAAD,CAAcA,QAASA,IAEvB,kBAAC,EAAD,CAAO1B,QAAS,SAAA+C,GAAS,OATX,SAAAA,GAClBD,EAAWC,GAQsBC,CAAYD,Q,MCJ7BE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBExI5BC,EAAOC,QAAU,CAAC,aAAe,mCAAmC,SAAW,+BAA+B,YAAc,kCAAkC,OAAS,+B,kBCAvKD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,EAAI,eAAe,EAAI,eAAe,MAAQ,qB,kBCAvFD,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,MAAQ,wB","file":"static/js/main.fc3218a8.chunk.js","sourcesContent":["const boxes = [];\nlet intialStatus = {};\nfor (let i = 1; i < 10; i++) {\n  boxes.push(i);\n  intialStatus = { ...intialStatus, [i]: \"\" };\n}\nintialStatus = { ...intialStatus, term: \"O\", steps: 0 };\n\nexport { boxes, intialStatus };\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport style from \"./login.module.css\";\n\nfunction Login(props) {\n  const [player1, setPlayer1] = useState(\"\");\n  const [player2, setPlayer2] = useState(\"\");\n\n  const handlePlayer1 = event => {\n    setPlayer1(event.target.value);\n  };\n\n  const handlePlayer2 = event => {\n    setPlayer2(event.target.value);\n  };\n\n  return (\n    <div className={style.loginContainer}>\n      <label>First Player name</label>\n      <input\n        className={style.input}\n        value={player1}\n        onChange={event => handlePlayer1(event)}\n      />\n      <label>Second Player name</label>\n      <input\n        className={style.input}\n        value={player2}\n        onChange={event => handlePlayer2(event)}\n      />\n      <Button\n        size=\"lg\"\n        onClick={() => props.onLogin({ player1: player1, player2: player2 })}\n      >\n        Start\n      </Button>\n    </div>\n  );\n}\n\nexport default Login;\n","import Login from \"./login\";\n\nexport default Login;\n","const possibleSolution = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n  [1, 5, 9],\n  [3, 5, 7],\n  [1, 4, 7],\n  [2, 5, 8],\n  [3, 6, 9]\n];\nconst gameChecker = status => {\n  for (let i = 0; i < 8; i++) {\n    let currentArray = possibleSolution[i];\n    if (\n      status[currentArray[0]] !== \"\" &&\n      status[currentArray[0]] === status[currentArray[1]] &&\n      status[currentArray[0]] === status[currentArray[2]]\n    ) {\n      return currentArray;\n    }\n  }\n  return false;\n};\n\nexport default gameChecker;\n","import gameChecker from \"./gameChecker\";\n\nexport default gameChecker;\n","import React, { memo } from \"react\";\nimport style from \"./box.module.css\";\n\nfunction Box(props) {\n  const additionalClass = props.term === \"O\" ? style.o : style.x;\n  const activeClass = props.active ? style.final : \"\";\n  return (\n    <div\n      className={[style.box, additionalClass, activeClass].join(\" \")}\n      onClick={() =>\n        props.term.length === 0 &&\n        !props.gameLock &&\n        props.handleClick(props.id)\n      }\n    >\n      {props.term}\n    </div>\n  );\n}\n\nexport default memo(Box);\n","import Box from \"./box\";\n\nexport default Box;\n","import React, { memo, useState, useEffect } from \"react\";\nimport { boxes, intialStatus } from \"../../loader\";\nimport gameChecker from \"../../gameChecker\";\nimport { Reload } from \"react-bytesize-icons\";\nimport Box from \"../box\";\nimport style from \"./boxContainer.module.css\";\n\nfunction BoxContainer({ players, ...props }) {\n  const [status, setStatus] = useState(intialStatus);\n  const [result, setResult] = useState([]);\n  let player1 = players.player1 || \"Player1\";\n  let player2 = players.player2 || \"Player2\";\n  useEffect(() => {\n    let response = gameChecker(status);\n    if (response) {\n      setResult(response);\n    }\n  }, [status]);\n\n  const setClick = id => {\n    setStatus(prevStatus => ({\n      ...prevStatus,\n      [id]: prevStatus.term,\n      term: prevStatus.term === \"O\" ? \"X\" : \"O\",\n      steps: prevStatus.steps + 1\n    }));\n  };\n\n  const restartGame = () => {\n    //Switch the term of player\n    let switchPlayer = player1;\n    player1 = player2;\n    player2 = switchPlayer;\n    setStatus(intialStatus);\n    setResult([]);\n  };\n\n  return (\n    <>\n      {result.length > 0 ? (\n        <div className={style.gameDetails}>\n          <span className={style.userInfo}>\n            {status.term === \"O\" ? player2 : player1}\n            {\" you Won\"}\n          </span>\n          <div className={style.reload} onClick={restartGame}>\n            <Reload />\n          </div>\n        </div>\n      ) : (\n        <div className={style.gameDetails}>\n          <span className={style.userInfo}>\n            {status.steps >= 9\n              ? \"Game Draw\"\n              : `${status.term === \"O\" ? player1 : player2} your turn...`}\n          </span>\n\n          <div className={style.reload} onClick={restartGame}>\n            <Reload />\n          </div>\n        </div>\n      )}\n      <div className={style.boxContainer}>\n        {boxes.map(item => (\n          <Box\n            id={item}\n            key={item}\n            handleClick={id => setClick(id)}\n            gameLock={result.length > 0}\n            term={status[item]}\n            active={result.includes(item)}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default memo(BoxContainer);\n","import BoxContainer from \"./boxContainer\";\n\nexport default BoxContainer;\n","import React, { useState } from \"react\";\nimport Login from \"./components/login\";\nimport BoxContainer from \"./components/boxContainer\";\n\nfunction App() {\n  const [players, setPlayers] = useState(null);\n\n  const handleLogin = newPlayer => {\n    setPlayers(newPlayer);\n  };\n\n  return (\n    <div className=\"App\">\n      {players ? (\n        <BoxContainer players={players} />\n      ) : (\n        <Login onLogin={newPlayer => handleLogin(newPlayer)} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxContainer\":\"boxContainer_boxContainer__YnxzJ\",\"userInfo\":\"boxContainer_userInfo__1KsfP\",\"gameDetails\":\"boxContainer_gameDetails__2Pu_0\",\"reload\":\"boxContainer_reload__1gFvL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"box_box__2bgV5\",\"x\":\"box_x__3tvwc\",\"o\":\"box_o__o30fU\",\"final\":\"box_final__3Ajcr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"login_loginContainer__1H0gr\",\"input\":\"login_input__S5ZYI\"};"],"sourceRoot":""}